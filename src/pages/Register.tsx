import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Separator } from '@/components/ui/separator';
import Icon from '@/components/ui/icon';
import { useState } from 'react';
import { useAuth } from '@/hooks/useAuth';
import { AuthService } from '@/services/authService';
import { useNavigate } from 'react-router-dom';
import AvatarSelector from '@/components/AvatarSelector';

export default function Register() {
  const [showEmailForm, setShowEmailForm] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [emailData, setEmailData] = useState({ email: '', password: '', confirmPassword: '', name: '' });
  const [selectedAvatar, setSelectedAvatar] = useState('https://cdn.jsdelivr.net/gh/twitter/twemoji@14.0.2/assets/svg/1f916.svg');
  const [showAvatarSelector, setShowAvatarSelector] = useState(false);
  const { login } = useAuth();
  const navigate = useNavigate();

  const handleOAuthLogin = async (provider: string) => {
    if (isLoading) return;
    
    setIsLoading(true);
    setError('');
    
    try {
      let userData;
      
      switch (provider) {
        case 'google':
          userData = await AuthService.loginWithGoogle();
          break;
        case 'vk':
          userData = await AuthService.loginWithVK();
          break;
        case 'telegram':
          userData = await AuthService.loginWithTelegram();
          break;
        default:
          throw new Error('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä');
      }
      
      await login(provider, userData);
      navigate('/profile');
    } catch (err) {
      setError(err instanceof Error ? err.message : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ');
    } finally {
      setIsLoading(false);
    }
  };

  const handleEmailRegister = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (emailData.password !== emailData.confirmPassword) {
      setError('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
      return;
    }
    
    setIsLoading(true);
    setError('');
    
    try {
      const userData = await AuthService.registerWithEmail(
        emailData.email,
        emailData.password,
        emailData.name
      );
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä
      userData.avatar = selectedAvatar;
      
      await login('email', userData);
      navigate('/profile');
    } catch (err) {
      setError(err instanceof Error ? err.message : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-50 to-amber-50 py-12">
      <div className="max-w-md mx-auto px-4">
        <div className="text-center mb-8">
          <div className="flex items-center justify-center space-x-2 mb-4">
            <div className="text-4xl">ü•ê</div>
            <span className="text-3xl font-bold font-montserrat text-primary">NEOBAKE</span>
          </div>
          <h1 className="text-2xl font-bold font-montserrat mb-2">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ N–µoBake</h1>
          <p className="text-foreground/70">–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –≤—Ö–æ–¥–∞</p>
        </div>

        <Card className="shadow-lg">
          <CardHeader>
            <CardTitle>–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –≤—Ö–æ–¥</CardTitle>
            <CardDescription>
              –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            {error && (
              <div className="bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-md text-sm">
                {error}
              </div>
            )}
            {/* Social Login Buttons */}
            <Button 
              className="w-full bg-blue-500 hover:bg-blue-600 text-white" 
              size="lg"
              disabled={isLoading}
              onClick={() => handleOAuthLogin('telegram')}
            >
              {isLoading ? (
                <Icon name="Loader2" className="mr-2 animate-spin" size={18} />
              ) : (
                <Icon name="Send" className="mr-2" size={18} />
              )}
              –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Telegram
            </Button>

            <Button 
              className="w-full bg-red-500 hover:bg-red-600 text-white" 
              size="lg"
              disabled={isLoading}
              onClick={() => handleOAuthLogin('google')}
            >
              {isLoading ? (
                <Icon name="Loader2" className="mr-2 animate-spin" size={18} />
              ) : (
                <Icon name="Mail" className="mr-2" size={18} />
              )}
              –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Google
            </Button>

            <Button 
              className="w-full bg-blue-600 hover:bg-blue-700 text-white" 
              size="lg"
              disabled={isLoading}
              onClick={() => handleOAuthLogin('vk')}
            >
              {isLoading ? (
                <Icon name="Loader2" className="mr-2 animate-spin" size={18} />
              ) : (
                <Icon name="MessageCircle" className="mr-2" size={18} />
              )}
              –í—Ö–æ–¥ —á–µ—Ä–µ–∑ VK
            </Button>

            <Separator className="my-6" />

            {/* Email Registration Toggle */}
            {!showEmailForm && !showAvatarSelector ? (
              <div className="space-y-3">
                <Button 
                  variant="outline" 
                  className="w-full" 
                  size="lg"
                  onClick={() => setShowEmailForm(true)}
                >
                  <Icon name="Mail" className="mr-2" size={18} />
                  Email-—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                </Button>
                
                <Button 
                  variant="outline" 
                  className="w-full" 
                  size="lg"
                  onClick={() => setShowAvatarSelector(true)}
                >
                  <Icon name="Image" className="mr-2" size={18} />
                  –í—ã–±—Ä–∞—Ç—å –∞–≤–∞—Ç–∞—Ä
                </Button>
              </div>
            ) : showAvatarSelector ? (
              <div className="space-y-4">
                <AvatarSelector
                  selectedAvatar={selectedAvatar}
                  onAvatarSelect={setSelectedAvatar}
                  userName={emailData.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                />
                <Button 
                  variant="ghost" 
                  className="w-full" 
                  onClick={() => setShowAvatarSelector(false)}
                >
                  <Icon name="ArrowLeft" className="mr-2" size={16} />
                  –ù–∞–∑–∞–¥
                </Button>
              </div>
            ) : (
              <form onSubmit={handleEmailRegister} className="space-y-4">
                <h3 className="font-semibold">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ email</h3>
                
                <div className="space-y-2">
                  <Label htmlFor="email">Email –∞–¥—Ä–µ—Å</Label>
                  <Input 
                    id="email" 
                    type="email" 
                    placeholder="your@email.com"
                    value={emailData.email}
                    onChange={(e) => setEmailData({...emailData, email: e.target.value})}
                    required
                  />
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="name">–ò–º—è</Label>
                  <Input 
                    id="name" 
                    type="text" 
                    placeholder="–í–∞—à–µ –∏–º—è"
                    value={emailData.name}
                    onChange={(e) => setEmailData({...emailData, name: e.target.value})}
                    required
                  />
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="password">–ü–∞—Ä–æ–ª—å</Label>
                  <Input 
                    id="password" 
                    type="password" 
                    placeholder="–°–æ–∑–¥–∞–π—Ç–µ –Ω–∞–¥—ë–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å"
                    value={emailData.password}
                    onChange={(e) => setEmailData({...emailData, password: e.target.value})}
                    required
                    minLength={6}
                  />
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="confirm-password">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</Label>
                  <Input 
                    id="confirm-password" 
                    type="password" 
                    placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                    value={emailData.confirmPassword}
                    onChange={(e) => setEmailData({...emailData, confirmPassword: e.target.value})}
                    required
                  />
                </div>
                
                <Button className="w-full" size="lg" type="submit" disabled={isLoading}>
                  {isLoading ? (
                    <Icon name="Loader2" className="mr-2 animate-spin" size={18} />
                  ) : (
                    <Icon name="UserPlus" className="mr-2" size={18} />
                  )}
                  –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
                </Button>
                
                <Button 
                  variant="ghost" 
                  className="w-full" 
                  onClick={() => setShowEmailForm(false)}
                >
                  –ù–∞–∑–∞–¥ –∫ –±—ã—Å—Ç—Ä–æ–º—É –≤—Ö–æ–¥—É
                </Button>
              </form>
            )}
          </CardContent>
        </Card>

        {/* Benefits Section */}
        <Card className="mt-6 shadow-lg">
          <CardHeader>
            <CardTitle className="flex items-center">
              <Icon name="Gift" className="mr-2 text-primary" size={20} />
              –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="flex items-start space-x-3">
                <Icon name="User" className="text-primary mt-1" size={16} />
                <div>
                  <h4 className="font-medium">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h4>
                  <p className="text-sm text-foreground/70">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏</p>
                </div>
              </div>
              
              <div className="flex items-start space-x-3">
                <Icon name="Clock" className="text-primary mt-1" size={16} />
                <div>
                  <h4 className="font-medium">–ò—Å—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h4>
                  <p className="text-sm text-foreground/70">–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
                </div>
              </div>
              
              <div className="flex items-start space-x-3">
                <Icon name="Heart" className="text-primary mt-1" size={16} />
                <div>
                  <h4 className="font-medium">–ò–∑–±—Ä–∞–Ω–Ω–æ–µ –º–µ–Ω—é</h4>
                  <p className="text-sm text-foreground/70">–°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –ª—é–±–∏–º—ã–µ –±–ª—é–¥–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤</p>
                </div>
              </div>
              
              <div className="flex items-start space-x-3">
                <Icon name="Bell" className="text-primary mt-1" size={16} />
                <div>
                  <h4 className="font-medium">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h4>
                  <p className="text-sm text-foreground/70">–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∞–∫—Ü–∏–∏</p>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Security Section */}
        <Card className="mt-6 shadow-lg">
          <CardHeader>
            <CardTitle className="flex items-center">
              <Icon name="Shield" className="mr-2 text-primary" size={20} />
              –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —É–¥–æ–±—Å—Ç–≤–æ
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-2 gap-4">
              <div className="text-center">
                <Icon name="ShieldCheck" className="mx-auto text-primary mb-2" size={24} />
                <p className="text-sm font-medium">–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</p>
              </div>
              
              <div className="text-center">
                <Icon name="CreditCard" className="mx-auto text-primary mb-2" size={24} />
                <p className="text-sm font-medium">–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–ª–∞—Ç—ë–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</p>
              </div>
              
              <div className="text-center">
                <Icon name="Lock" className="mx-auto text-primary mb-2" size={24} />
                <p className="text-sm font-medium">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏</p>
              </div>
              
              <div className="text-center">
                <Icon name="Smartphone" className="mx-auto text-primary mb-2" size={24} />
                <p className="text-sm font-medium">–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤</p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Welcome Process */}
        <Card className="mt-6 shadow-lg">
          <CardHeader>
            <CardTitle className="flex items-center">
              <Icon name="Rocket" className="mr-2 text-primary" size={20} />
              –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              <div className="flex items-center space-x-3">
                <div className="w-6 h-6 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-sm font-bold">1</div>
                <span className="text-sm">–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</span>
              </div>
              
              <div className="flex items-center space-x-3">
                <div className="w-6 h-6 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-sm font-bold">2</div>
                <span className="text-sm">–ö—Ä–∞—Ç–∫–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</span>
              </div>
              
              <div className="flex items-center space-x-3">
                <div className="w-6 h-6 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-sm font-bold">3</div>
                <span className="text-sm">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤</span>
              </div>
              
              <div className="flex items-center space-x-3">
                <div className="w-6 h-6 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-sm font-bold">4</div>
                <span className="text-sm">–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</span>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Call to Action */}
        <div className="mt-8 text-center">
          <p className="text-foreground/70 mb-4">
            –ù–∞—á–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è N–µoBake –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!
          </p>
          <p className="text-sm text-foreground/60">
            –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤ –º–∏—Ä–µ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è
          </p>
        </div>
      </div>
    </div>
  );
}